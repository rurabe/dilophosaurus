class Subnet

  TABLE = {
    '30' => {a: 4,     h: 2,     s: '255.255.255.252'},
    '29' => {a: 8,     h: 6,     s: '255.255.255.248'},
    '28' => {a: 16,    h: 14,    s: '255.255.255.240'},
    '27' => {a: 32,    h: 30,    s: '255.255.255.224'},
    '26' => {a: 64,    h: 62,    s: '255.255.255.192'},
    '25' => {a: 128,   h: 126,   s: '255.255.255.128'},    
    '24' => {a: 256,   h: 254,   s: '255.255.255.0'  },
    '23' => {a: 512,   h: 510,   s: '255.255.254.0'  },
    '22' => {a: 1024,  h: 1022,  s: '255.255.252.0'  },
    '21' => {a: 2048,  h: 2046,  s: '255.255.248.0'  },
    '20' => {a: 4096,  h: 4094,  s: '255.255.240.0'  },
    '19' => {a: 8192,  h: 8190,  s: '255.255.224.0'  },
    '18' => {a: 16384, h: 16382, s: '255.255.192.0'  },
    '17' => {a: 32768, h: 32766, s: '255.255.128.0'  },
    '16' => {a: 65536, h: 65534, s: '255.255.0.0'    },
  }

  def initialize(ip)
    match = ip.match(/(?<a>\d{1,3})\.(?<b>\d{1,3})\.(?<c>\d{1,3})\.(?<d>\d{1,3})\s+\/(?<size>\d{2})/)
    @a = match[:a].to_i
    @b = match[:b].to_i
    @c = match[:c].to_i
    @d = match[:d].to_i
    @size = match[:size]
  end

  def beginning
    [@a,@b,@c,@d].join(".")
  end

  def end
    addresses = TABLE[@size][:a]
    c = @c + ((addresses - 1) / 256)
    d = @d + ((addresses - 1) % 256)
    [@a,@b,c,d].join(".")
  end

  def mask
    TABLE[@size][:s]
  end

  def ticketmaster_ips(i)
    ds(i).map do |d|
      [[@a,@b,@c,d].join("."),mask].join(",")
    end.shuffle
  end

  private
    def ds(i)
      if i.odd?
        [4, 6, 8, 11, 19, 20, 23, 27, 29, 31, 33, 38, 40, 42, 45, 47, 49, 51, 52]
      else
        [2, 3, 5, 7, 9, 15, 17, 21, 25, 30, 32, 34, 35, 37, 39, 41, 46, 48, 50]
      end
    end


end